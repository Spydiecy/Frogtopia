import React, { useState, useEffect } from 'react';

const Inventory = ({ gameContract, account, web3, ownedFrogs, onItemUse }) => {
  const [items, setItems] = useState([]);
  const [selectedFrog, setSelectedFrog] = useState(null);
  const [equipping, setEquipping] = useState(false);

  useEffect(() => {
    loadInventory();
  }, []);

  const loadInventory = async () => {
    try {
      const itemCount = await gameContract.methods.itemCount().call();
      const loadedItems = [];
      for (let i = 1; i <= itemCount; i++) {
        const item = await gameContract.methods.items(i).call();
        const quantity = await gameContract.methods.inventory(account, i).call();
        if (quantity > 0) {
          loadedItems.push({ id: i, ...item, quantity });
        }
      }
      setItems(loadedItems);
    } catch (error) {
      console.error("Error loading inventory:", error);
    }
  };

  const equipItem = async (itemId) => {
    if (!selectedFrog) return;
    setEquipping(true);
    try {
      await gameContract.methods.equipItem(selectedFrog, itemId).send({ from: account });
      onItemUse();
      loadInventory();
    } catch (error) {
      console.error("Error equipping item:", error);
    }
    setEquipping(false);
  };

  return (
    <div className="inventory">
      <h2 className="text-2xl font-bold mb-4">Inventory</h2>
      <div className="mb-4">
        <label className="block mb-2">Select Frog to Equip Item:</label>
        <select
          value={selectedFrog || ''}
          onChange={(e) => setSelectedFrog(e.target.value)}
          className="bg-green-700 text-white px-3 py-1 rounded focus:outline-none focus:ring-2 focus:ring-yellow-500"
        >
          <option value="">Select a Frog</option>
          {ownedFrogs.map((frogId) => (
            <option key={frogId} value={frogId}>Frog #{frogId}</option>
          ))}
        </select>
      </div>
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        {items.map((item) => (
          <div key={item.id} className="bg-green-700 p-4 rounded shadow-lg">
            <h3 className="text-xl font-semibold mb-2">{item.name}</h3>
            <p>Type: {item.itemType}</p>
            <p>Bonus: {item.bonus}</p>
            <p>Quantity: {item.quantity}</p>
            <button
              onClick={() => equipItem(item.id)}
              disabled={equipping || !selectedFrog}
              className="bg-yellow-500 text-green-800 px-3 py-1 rounded mt-2 hover:bg-yellow-600 transition-colors duration-300"
            >
              {equipping ? 'Equipping...' : 'Equip Item'}
            </button>
          </div>
        ))}
      </div>
    </div>
  );
};

export default Inventory;